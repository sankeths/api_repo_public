---
swagger: "2.0"
info:
  description: "A supercool demo site that takes care of your uber cool demo.</br> Nice one here ! For exclusive use of <b style= \"font-family: Arial;font-size: 24px;color:#4278d2;\">SMARTBEAR</b> Sales Engineers.</br>\n<img src=\"https://raw.githubusercontent.com/sankeths/Swagger/master/awesomeShoppingStore.PNG\" alt=\"ShoppingCart\" >\n"
  version: 2.0.0
  title: Awesome Shopping Store API Design - SMARTBEAR
  termsOfService: http://smartbear.com
  contact:
    email: sanketh.shanbhag@smartbear.com
  license:
    name: Commercial License Available
    url: http://smartbear.com
host: virtserver.swaggerhub.com
basePath: /sanketh/Awesome_Shopping_Store_Sanketh/2.0.0
tags:
- name: Internal calls
  description: "Operations available to regular development, integration, test teams."
- name: External calls
  description: Operations dependent on third party service.
schemes:
- https
- http
paths:
  /api/get_login.php:
    get:
      tags:
      - Internal calls
      description: Login to user account
      consumes:
      - application/json
      produces:
      - application/json
      - application/xml
      parameters:
      - name: type
        in: path
        description: json or xml
        required: true
        type: string
      security:
      - basic: []
      responses:
        "200":
          description: OK
          schema:
            xml:
              name: Response
              wrapped: false
  /{type}/get_products/:
    get:
      tags:
      - Internal calls
      description: Get list of all products
      consumes:
      - application/json
      produces:
      - application/json
      - application/xml
      parameters:
      - name: type
        in: path
        description: json or xml
        required: true
        type: string
      security:
      - basic: []
      responses:
        "200":
          description: OK
          schema:
            xml:
              name: Products
              wrapped: true
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                  example: 1
                  description: Product id
                name:
                  type: string
                  example: iPhone
                  description: Product Name
                description:
                  type: string
                  example: This is an rare iphone
                  description: Product Description
                image:
                  type: string
                  example: iphone.jpg
                  description: Product Image
                price:
                  type: number
                  example: 999.0
                  description: Price of the product
                created:
                  type: string
                  example: 2018-05-05 00:00:00
                  description: Date time of creation
                modified:
                  type: string
                  example: 2018-05-05 00:00:00
                  description: Date time of creation
                status:
                  type: integer
                  example: 1 or 0
                  description: Status of the user
  /{type}/get_orders/:
    get:
      tags:
      - Internal calls
      description: Get list of all orders for the user
      consumes:
      - application/json
      produces:
      - application/json
      - application/xml
      parameters:
      - name: type
        in: path
        description: json or xml
        required: true
        type: string
      security:
      - basic: []
      responses:
        "200":
          description: OK
          schema:
            xml:
              name: Orders
              wrapped: true
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                  example: 1
                  description: Order's ID
                customer_id:
                  type: integer
                  example: 1
                  description: Customer ID
                total_price:
                  type: number
                  example: 999.0
                  description: Total Order Price
                status:
                  type: integer
                  example: 0
                  description: Status of the order for internal use.
                order_id:
                  type: integer
                  example: 1
                  description: Order ID
                quantity:
                  type: integer
                  example: 1
                  description: Quantity
                price:
                  type: number
                  example: 1.0
                  description: Price of the product
                image:
                  type: string
                  example: iphone.jpeg
                  description: Image of the product
                paymenttype:
                  type: string
                  example: card
                  description: Order payment method
  /{type}/post_order/:
    post:
      tags:
      - Internal calls
      description: Get list of all orders for the user
      consumes:
      - application/json
      produces:
      - application/json
      - application/xml
      parameters:
      - name: type
        in: path
        description: json or xml
        required: true
        type: string
      - in: body
        name: POSTDATA
        description: Creates a new employee in DB
        required: false
        schema:
          type: array
          items:
            type: object
            properties:
              quantity:
                type: integer
                example: 1
                description: Product Quantity
              product_id:
                type: integer
                example: 1
                description: Product Id
      security:
      - basic: []
      responses:
        "200":
          description: OK
          schema:
            xml:
              name: Orders
              wrapped: false
            type: array
            items:
              type: object
              properties:
                Order ID:
                  type: integer
                  example: 298
                  description: Order ID
                Order Item ID:
                  type: integer
                  example: 643
                  description: Product Id
                Item Total Price:
                  type: number
                  example: 1998.0
                  description: Total price of item
                Total Order Price:
                  type: number
                  example: 3996.0
                  description: Total price of the order
  /{type}/get_order/:
    get:
      tags:
      - Internal calls
      description: Get order details
      consumes:
      - application/json
      produces:
      - application/json
      - application/xml
      parameters:
      - name: type
        in: path
        description: json or xml
        required: true
        type: string
      - name: order_id
        in: query
        description: Order Id
        required: true
        type: integer
      security:
      - basic: []
      responses:
        "200":
          description: OK
          schema:
            xml:
              name: Orders
              wrapped: true
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                  example: 1
                  description: Order's ID
                customer_id:
                  type: integer
                  example: 1
                  description: Customer ID
                name:
                  type: string
                  example: Iphone
                  description: product Name
                total_price:
                  type: number
                  example: 999.0
                  description: Total Order Price
                status:
                  type: integer
                  example: 0
                  description: Status of the order for internal use.
                order_id:
                  type: integer
                  example: 1
                  description: Order ID
                quantity:
                  type: integer
                  example: 1
                  description: Quantity
                price:
                  type: number
                  example: 1.0
                  description: Price of the product
                paymenttype:
                  type: string
                  example: card
                  description: Order payment method
  /shoppingcart/service_creditcard.php:
    post:
      tags:
      - External calls
      description: External Service to make Creditcard payments
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: POSTDATA
        description: Creates a new employee in DB
        required: false
        schema:
          type: object
          properties:
            id:
              type: integer
              example: 33
              description: Order ID
            action:
              type: string
              example: placeOrdercc
              description: placeOrdercc
            cc_money:
              type: number
              example: 798.0
              description: Order amount
            cc_name:
              type: string
              example: S S
              description: Cardholders name
            cc_number:
              type: integer
              example: 9234123412341234
              description: cc number
            cc_exp_mo:
              type: integer
              example: 1
              description: cc expiry month
            cc_exp_yr:
              type: integer
              example: 2018
              description: cc expiry year
            cc_cvv:
              type: integer
              example: 123
              description: cc expiry year
      security:
      - basic: []
      responses:
        "200":
          description: OK
          schema:
            type: object
            required:
            - Reason
            - Status
            - Status Code
            properties:
              Status:
                type: string
                example: Transaction Approved
                description: Status of transaction
              Reason:
                type: string
                example: Approved
                description: Status Readon
              Status Code:
                type: integer
                example: 100
                description: Status code for the tramsaction
securityDefinitions:
  basic:
    type: basic
parameters:
  pathParam:
    name: type
    in: path
    description: json or xml
    required: true
    type: string
x-apigee-id: ShoppingCart
